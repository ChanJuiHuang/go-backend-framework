{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "title": "Example API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/admin/grouping-policy": {
            "post": {
                "description": "grant the roles to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "grant the roles to user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "csrf token",
                        "name": "X-XSRF-TOKEN",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "create grouping policy",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.AdminCreateGroupingPolicyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.AdminCreateGroupingPolicyData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code: 400-001(add grouping policy is failed), 400-002(request validation failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "code: 403-001(csrf token mismatch, casbin authorization failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "revoke the roles to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "revoke the roles to user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "csrf token",
                        "name": "X-XSRF-TOKEN",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "delete grouping policy",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.AdminDeleteGroupingPolicyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.AdminDeleteGroupingPolicyData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code: 400-001(delete grouping policy failed), 400-002(request validation failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "code: 403-001(csrf token mismatch, casbin authorization failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/policy": {
            "post": {
                "description": "bind the permissions on the role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "bind the permissions on the role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "csrf token",
                        "name": "X-XSRF-TOKEN",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "create policy",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.AdminCreatePolicyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.AdminCreatePolicyData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code: 400-001(add policy is failed), 400-002(request validation failed), 400-005(one of policy is repeat)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "code: 403-001(csrf token mismatch, casbin authorization failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove the permissions on the role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "remove the permissions on the role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "csrf token",
                        "name": "X-XSRF-TOKEN",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "delete policy",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.AdminDeletePolicyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.AdminDeletePolicyData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code: 400-001(delete policy failed), 400-002(request validation failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "code: 403-001(csrf token mismatch, casbin authorization failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/policy/reload": {
            "post": {
                "description": "reload the policies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "reload the policies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "csrf token",
                        "name": "X-XSRF-TOKEN",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    },
                    "400": {
                        "description": "code: 400-001(load policy is failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "code: 403-001(csrf token mismatch, casbin authorization failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/policy/subject": {
            "get": {
                "description": "search roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "search roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.AdminSearchPolicySubjectData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "code: 403-001(casbin authorization failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "delete roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "csrf token",
                        "name": "X-XSRF-TOKEN",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "delete policy subject",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.AdminDeletePolicySubjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.AdminDeletePolicySubjectData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "code: 403-001(casbin authorization failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/policy/subject/{subject}": {
            "get": {
                "description": "get permissions in the role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "get permissions in the role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "subject",
                        "name": "subject",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.AdminGetPolicySubjectData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "code: 403-001(casbin authorization failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/policy/subject/{subject}/user": {
            "get": {
                "description": "get user ids in the role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "get user ids in the role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "subject",
                        "name": "subject",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.AdminGetPolicySubjectUserData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "code: 403-001(casbin authorization failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/user/{userId}/grouping-policy": {
            "get": {
                "description": "get roles that belong to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "get roles that belong to user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.AdminGetUserGroupingPolicyData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "code: 403-001(casbin authorization failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ping": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "{\"message\": \"pong\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/user": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "csrf token",
                        "name": "X-XSRF-TOKEN",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "update user",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.UserUpdateData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code: 400-001(update user failed, get user failed), 400-002(request validation failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "csrf token",
                        "name": "X-XSRF-TOKEN",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "login user",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.UserLoginData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code: 400-001(issue access token failed), 400-002(request validation failed), 400-003(email is wrong), 400-004(password is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "code: 403-001(csrf token mismatch)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/me": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.UserMeData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code: 400-001(get user failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/password": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "csrf token",
                        "name": "X-XSRF-TOKEN",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "update user",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserUpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    },
                    "400": {
                        "description": "code: 400-001(update password failed), 400-002(request validation failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/policy": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.UserGetPolicyData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code: 400-001(get user policy failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "code: 401-001(access token is wrong)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "csrf token",
                        "name": "X-XSRF-TOKEN",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "register user",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.UserRegisterData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code: 400-001(issue access token failed), 400-002(request validation failed)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "code: 403-001(csrf token mismatch)",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "code: 500-001",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.AdminCreateGroupingPolicyData": {
            "type": "object",
            "required": [
                "subjects",
                "user_id"
            ],
            "properties": {
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "admin.AdminCreateGroupingPolicyRequest": {
            "type": "object",
            "required": [
                "subjects",
                "user_id"
            ],
            "properties": {
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "admin.AdminCreatePolicyData": {
            "type": "object",
            "required": [
                "rules",
                "subject"
            ],
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.Rule"
                    }
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "admin.AdminCreatePolicyRequest": {
            "type": "object",
            "required": [
                "rules",
                "subject"
            ],
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.Rule"
                    }
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "admin.AdminDeleteGroupingPolicyData": {
            "type": "object",
            "required": [
                "subjects",
                "user_id"
            ],
            "properties": {
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "admin.AdminDeleteGroupingPolicyRequest": {
            "type": "object",
            "required": [
                "subjects",
                "user_id"
            ],
            "properties": {
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "admin.AdminDeletePolicyData": {
            "type": "object",
            "required": [
                "rules",
                "subject"
            ],
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.Rule"
                    }
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "admin.AdminDeletePolicyRequest": {
            "type": "object",
            "required": [
                "rules",
                "subject"
            ],
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.Rule"
                    }
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "admin.AdminDeletePolicySubjectData": {
            "type": "object",
            "required": [
                "subjects"
            ],
            "properties": {
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "admin.AdminDeletePolicySubjectRequest": {
            "type": "object",
            "required": [
                "subjects"
            ],
            "properties": {
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "admin.AdminGetPolicySubjectData": {
            "type": "object",
            "required": [
                "rules",
                "subject"
            ],
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.Rule"
                    }
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "admin.AdminGetPolicySubjectUserData": {
            "type": "object",
            "required": [
                "user_ids"
            ],
            "properties": {
                "user_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "admin.AdminGetUserGroupingPolicyData": {
            "type": "object",
            "required": [
                "subjects",
                "user_id"
            ],
            "properties": {
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "admin.AdminSearchPolicySubjectData": {
            "type": "object",
            "required": [
                "subjects"
            ],
            "properties": {
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "admin.Rule": {
            "type": "object",
            "required": [
                "action",
                "object"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "PATCH",
                        "DELETE"
                    ]
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "response.Debug": {
            "type": "object",
            "required": [
                "error",
                "stacktrace"
            ],
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                },
                "stacktrace": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "context": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "debug": {
                    "$ref": "#/definitions/response.Debug"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {}
            }
        },
        "user.UserGetPolicyData": {
            "type": "object",
            "required": [
                "rules"
            ],
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "user.UserLoginData": {
            "type": "object",
            "required": [
                "access_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "user.UserLoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.UserMeData": {
            "type": "object",
            "required": [
                "created_at",
                "email",
                "id",
                "name",
                "updated_at"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user.UserRegisterData": {
            "type": "object",
            "required": [
                "access_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "user.UserRegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "user.UserUpdateData": {
            "type": "object",
            "required": [
                "created_at",
                "email",
                "id",
                "name",
                "updated_at"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user.UserUpdatePasswordRequest": {
            "type": "object",
            "required": [
                "confirm_password",
                "current_password",
                "password"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "current_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "user.UserUpdateRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}